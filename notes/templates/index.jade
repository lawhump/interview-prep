doctype html
html(lang="en")
    head
        title Notes as I Go
        link(rel='stylesheet' href='//fonts.googleapis.com/css?family=Source+Sans+Pro:300|Lora')
        link(rel='stylesheet' href='css/styles.css')
    body
        header
            h1 Lawrence's Guide to Crushing Google
            nav
                ul
                    li: a(href="index.html") Data Structures and Algorithms
                    li: a(href="web.html") Web Development

        div.anchors
            h3 Jump to section:
            a(href='#algorithm-approaches') Algorithm Approaches
            br
            a(href='#trees-and-graphs') Trees and Graphs

        div.more-info
            h5.
                This was my attempt to keep me obligated to studying
                and learning new things - i.e. using Jade for the first 
                time. More available on github. Check me out dudes! 
            a(href='http://www.github.com/lawhump') My Github

        section.content
            article#algorithm-approaches
                h2 Algorithm Approaches

                h3 <strong>Five Algorithm Approaches</strong>
                ol
                    li
                        h4 Examplify
                        p.
                            Write out specific examples of the problem, 
                            and see if you can figure out a general rule.

                    li
                        h4 Pattern Matching
                        p.
                            Consider what problems the algorithm is similar
                            to and figure out how to modify it to make it work.

                        em I should probably use this more often
                    li        
                        h4 Simplify and Generalize
                        p.
                            Change a constraint (data type, size, etc.) to 
                            simplify the problem. Then (try to) solve it.
                            Then generalize and solve it.
                    li        
                        h4 Base Case and Build
                        p.
                            Solve for one case. Then two. Then n.
                            Naturally recursive.
                    li        
                        h4 Data Structure Brainstorm
                        p.
                            "Hacky". Go through a list of data structures 
                            and see which one(s) applies/apply.


            article#trees-and-graphs
                h2 Trees and Graphs

                h3 <strong>Potential Issues to Watch Out For</strong>

                h5 Binary Tree vs. Binary Search Tree
                    p.
                        Don't jump to conclusions. Remember to ask the 
                        interviewer to clarify.

                h5 Balanced vs. Unbalanced
                    p.
                        Ask interviewer to clarify. Usually balanced within 
                        a certain tolerance.

                h5 Full and Complete
                    p.
                        Again, ask to clarify. Full - 0 or n children, where
                        n is 

                h3 <strong>Three Ways to Represent Graphs in Memory</strong>

                ol
                    li Nodes as objects and edges as pointers
                    li Adjacency Matrix
                    li Adjacency List
                


            


